% - Our pipeline can return 4 different outputs:
% - ballot is invalid
% - ballot's validity is unidentifiable
% - ballot is inaproppriately marked
% - ballot is valid and apropproiately marked -> return marked choice

% ########
% PIPELINE
% ########
function output = Pipeline()
    % - Read in a ballot template image and possible template choices
    [template, templateChoices] = Templ();

    ballotFiles = BallotFiles();

    % - For each image, go through the following steps:
    for ballotFile = ballotFiles
    % - Read in ballot image
    % - Prepare the image for the template matching
    ballotImg = Read(ballotFile);
    
    %imshow(ballots(1,:,:,:));
        % - STEP 1
        % - Match template to ballot
        % - Includes any necessary gemeotric tansformations
        % - If a match cannot be made, declare the ballot invalid -> cancel the
        % pipeline and return
        % - this step can maybe be split into two functions instead of just one?
        transformedBallot = Transform(ballotImg, template);

        % - Match circles in ballot
        % - Associate each circle with its appropriate choice (e.g. by
        % outputting circles in correct order)
        % - If the right amount of circles cannot be found, declare the ballot's
        % validity as unidentifiable -> cancel the pipeline and return
        %ballotCircles = Circles(ballot);
        
        % - Figure out which circle is marked
        % - If a marked circle is found, declare the ballot valid and return 
        % - If no circle is marked, declare the ballot inaproppriately marked ->
        % cancel the pipeline and return
    end
    
    
    output = 0;
end



