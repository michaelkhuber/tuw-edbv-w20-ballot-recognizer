function [centers_out,radii_out] = SortCircles(centers_in,radii_in)
%SORTCIRCLES Summary of this function goes here
%   Detailed explanation goes here

% Y threshold, circle centers within 20px of each other are treated
% as equal
Y_THRESHOLD = 20;

% X-coordinate median and X threshold
x_median = median(centers_in(:,1));
X_THRESHOLD = 50;

% Include first circle that is within median
if abs(centers_in(1,1)-x_median) < X_THRESHOLD
    centers_out = centers_in(1,:);
    radii_out = radii_in(1);
end



% Loop through other circles
for i = 2:length(centers_in)
    % Check if circle is equal to already covered circle
    difference = abs(centers_out(:,2) - centers_in(i,2));
    in_group = difference < Y_THRESHOLD;
    newgroup = all(not(in_group));
    
    % Include if no equal circle found
    if newgroup
        % Only include if circle is near x median
        if abs(centers_in(i,1)-x_median) < X_THRESHOLD
            centers_out = [centers_out; centers_in(i,:)];
            radii_out = [radii_out; radii_in(i)];
        end
    else
        % Use circle if radius is bigger
        matching_groups = find(in_group);
        if length(matching_groups) == 1
            if radii_out(matching_groups) < radii_in(i)
                radii_out(matching_groups) = radii_in(i);
                centers_out(matching_groups) = centers_in(i);
            end
            
        % Error if more than one matching group is found
        else
            error("More than one group matching circle found");
        end 
    end
end


end

